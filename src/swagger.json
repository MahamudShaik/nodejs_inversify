{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "mahamud-nodejs-Typescript-CRUD-REST-API",
        "description": "Implementation of Inversifyjs-express-utils and TypeORM",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "apiteam@swagger.io"
        }
    },
    "host": "localhost:3000",
    "basePath": "",
    "tags": [
        {
            "name": "Plans",
            "description": "API to access Plans in the system"
        }
    ],
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/plan": {
            "get": {
                "tags": [
                    "Plans"
                ],
                "summary": "Get all Plans in System",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Plans"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Plans"
                ],
                "summary": "Create a New Plan in System",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Plan that we need to create",
                        "schema": {
                            "$ref": "#/definitions/PlanDto"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Plan"
                        }
                    }
                }
            }
        },
        "/plan/{name}": {
            "parameters": [
                {
                    "name": "name",
                    "in": "path",
                    "required": true,
                    "description": "name of the plan that we want to match",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Plans"
                ],
                "summary": "Get Plan with given plan name",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "required": true,
                        "description": "Plan with name",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Plan"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Plans"
                ],
                "summary": "Update Plan with given plan name",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "description": "Plan with new values of properties",
                        "schema": {
                            "$ref": "#/definitions/PlanDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Plan"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Cat with given name",
                "tags": [
                    "Plans"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "required": true,
                        "description": "Delete Plan with name",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "id": {
            "properties": {
                "uuid": {
                    "type": "string"
                }
            }
        },
        "PlanDto": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "amount": {
                    "type": "string"
                },
                "validity": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                }
            }
        },
        "Plan": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "amount": {
                    "type": "string"
                },
                "validity": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                }
            }
        },
        "Plans": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Plan"
            }
        }
    }
}